<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name>Archetype Created Web Application</display-name>


  <!--配置Spring前端过滤器，处理中文乱码-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!-- （1）.从类路径下加载spring配置文件，classpath关键字特指在类路径下加载 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring-web.xml,classpath:spring-dao.xml,classpath:spring-service.xml</param-value>  <!-- 如果有多个配置文件可用逗号（建议）、空格分隔 -->
  </context-param>

  <!-- context-param -> listener -> filter -> servlet  -->

  <!-- 负责启动spring容器(WebApplicationContext类初始化 )的监听器，他将加载上面（1）处的上下文参数获得Spring配置bean的文件 ，在spring-web包中-->
  <!-- 注意需要将log4j.properties日志配置文件放置在类路径下，以便日志引擎自动生效 -->
  <listener>
    <listener-class>
      org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>

  <!-- 配置SpringMVC相关信息，SpringMVC像struts一样，也通过一个Servlet截获URL请求，然后再进行相关的处理 -->

  <!-- Spring MVC的主控Servlet,在spring-webmvc包中，如果有必要可以配置多个。
   Spring MVC也拥有一个Spring配置文件，该配置文件的文件名和此处定义的Servlet名有一个契约：
   即采用：Servlet名-servlet.xml ,文件的标准是一个spring bean的配置文件
   在这里Servlet名为viewspace,所以在/WEB-INF目录下必须提供一个viewspace-servlet.xml的Spring MVC配置文件.
   此处配置名为viewspace的DispatcherServlet,DispatcherServlet默认自动加载/WEB-INF/viewspace-servlet.xml的Spring MVC配置文件，
   -->
  <servlet>
    <servlet-name>viewspace</servlet-name>
    <servlet-class> org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <!-- Spring MVC处理的URL,/*处理所有请求，*.html只过滤html结尾的请求 -->
  <servlet-mapping>
    <servlet-name>viewspace</servlet-name>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>/pages/index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
